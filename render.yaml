services:
  # Backend API Service
  - type: web
    name: filmila
    env: node
    nodeVersion: 16
    buildCommand: |
      echo "=== Starting build process ==="
      echo "Current directory: $PWD"
      ls -la
      
      echo "\n=== Installing dependencies ==="
      npm ci --legacy-peer-deps
      
      echo "\n=== Building frontend ==="
      cd frontend
      echo "Frontend directory: $PWD"
      ls -la
      npm ci --legacy-peer-deps
      CI=false DISABLE_ESLINT_PLUGIN=true npm run build
      echo "Frontend build contents:"
      ls -la build
      
      echo "\n=== Building backend ==="
      cd ../backend
      echo "Backend directory: $PWD"
      ls -la
      npm ci --legacy-peer-deps
      npm run build
      npm run migrate
      
      echo "\n=== Setting up static files ==="
      echo "Creating public directory..."
      rm -rf public
      mkdir -p public
      echo "Copying frontend build..."
      cp -rv ../frontend/build/* public/
      echo "Public directory contents:"
      ls -la public
      
      echo "\n=== Final verification ==="
      pwd
      echo "Public directory exists:"
      test -d public && echo "Yes" || echo "No"
      echo "index.html exists:"
      test -f public/index.html && echo "Yes" || echo "No"
      echo "Public directory contents:"
      ls -la public
      echo "Public directory size:"
      du -sh public
      echo "index.html contents (first few lines):"
      head -n 5 public/index.html || echo "File not found or empty"
    startCommand: |
      echo "=== Starting server ==="
      echo "Current directory: $PWD"
      ls -la
      
      echo "\n=== Verifying public directory ==="
      echo "Public directory exists:"
      test -d public && echo "Yes" || echo "No"
      echo "Public directory contents:"
      ls -la public || echo "Directory not found"
      echo "index.html exists:"
      test -f public/index.html && echo "Yes" || echo "No"
      
      echo "\n=== Starting Node.js server ==="
      NODE_ENV=production node src/app.js
    rootDirectory: backend
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_SSL
        value: true
      - key: DATABASE_URL
        fromDatabase:
          name: filmila-db
          property: connectionString
      - key: JWT_SECRET
        generateValue: true
      - key: JWT_EXPIRY
        value: 24h
      - key: FRONTEND_URL
        value: https://filmila-web.onrender.com
      - key: API_PREFIX
        value: /api
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false
      - key: AWS_REGION
        value: eu-north-1
      - key: AWS_S3_BUCKET
        value: filmila-videos
      - key: CLOUDFRONT_DOMAIN
        value: d1k0enfou8eft6.cloudfront.net

  # Frontend Static Site
  - type: web
    name: filmila-web
    env: static
    rootDir: frontend
    buildCommand: |
      npm ci --production=false
      npm run build
    staticPublishPath: build
    envVars:
      - key: REACT_APP_API_URL
        value: https://filmila-api.onrender.com/api
      - key: REACT_APP_CLOUDFRONT_DOMAIN
        value: d1k0enfou8eft6.cloudfront.net
    routes:
      - type: rewrite
        source: /*
        destination: /index.html

databases:
  - name: filmila-db
    plan: free
    ipAllowList: []
