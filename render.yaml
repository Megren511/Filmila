services:
  # Backend API Service
  - type: web
    name: filmila
    env: node
    nodeVersion: 16
    buildCommand: |
      echo "=== Starting build process ==="
      pwd
      ls -la
      
      # Build frontend
      echo "\n=== Building frontend ==="
      cd frontend
      npm ci --legacy-peer-deps
      CI=false DISABLE_ESLINT_PLUGIN=true npm run build
      cd ..
      
      # Save frontend build path
      FRONTEND_BUILD_PATH=$PWD/frontend/build
      echo "FRONTEND_BUILD_PATH=$FRONTEND_BUILD_PATH" > .env
      echo "\nFrontend build path: $FRONTEND_BUILD_PATH"
      ls -la $FRONTEND_BUILD_PATH
      
      # Build backend
      echo "\n=== Building backend ==="
      cd backend
      npm ci --legacy-peer-deps
      npm run build
      npm run migrate
      cd ..
      
      # Verify frontend build
      echo "\n=== Verifying frontend build ==="
      echo "Build directory exists:"
      test -d $FRONTEND_BUILD_PATH && echo "Yes" || echo "No"
      echo "index.html exists:"
      test -f $FRONTEND_BUILD_PATH/index.html && echo "Yes" || echo "No"
      echo "Contents:"
      ls -la $FRONTEND_BUILD_PATH
      echo "First few lines of index.html:"
      head -n 5 $FRONTEND_BUILD_PATH/index.html
    startCommand: |
      echo "=== Starting server ==="
      pwd
      ls -la
      
      # Export frontend build path
      export FRONTEND_BUILD_PATH=$PWD/frontend/build
      echo "FRONTEND_BUILD_PATH=$FRONTEND_BUILD_PATH"
      
      # Verify frontend build
      echo "\n=== Verifying frontend build ==="
      echo "Build directory exists:"
      test -d $FRONTEND_BUILD_PATH && echo "Yes" || echo "No"
      echo "index.html exists:"
      test -f $FRONTEND_BUILD_PATH/index.html && echo "Yes" || echo "No"
      echo "Contents:"
      ls -la $FRONTEND_BUILD_PATH
      
      # Start server
      cd backend
      NODE_ENV=production node src/app.js
    rootDirectory: .
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_SSL
        value: true
      - key: DATABASE_URL
        fromDatabase:
          name: filmila-db
          property: connectionString
      - key: JWT_SECRET
        generateValue: true
      - key: JWT_EXPIRY
        value: 24h
      - key: FRONTEND_URL
        value: https://filmila-web.onrender.com
      - key: API_PREFIX
        value: /api
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false
      - key: AWS_REGION
        value: eu-north-1
      - key: AWS_S3_BUCKET
        value: filmila-videos
      - key: CLOUDFRONT_DOMAIN
        value: d1k0enfou8eft6.cloudfront.net

  # Frontend Static Site
  - type: web
    name: filmila-web
    env: static
    rootDir: frontend
    buildCommand: |
      npm ci --production=false
      npm run build
    staticPublishPath: build
    envVars:
      - key: REACT_APP_API_URL
        value: https://filmila-api.onrender.com/api
      - key: REACT_APP_CLOUDFRONT_DOMAIN
        value: d1k0enfou8eft6.cloudfront.net
    routes:
      - type: rewrite
        source: /*
        destination: /index.html

databases:
  - name: filmila-db
    plan: free
    ipAllowList: []
